SET DEFINE OFF
SET SCAN OFF
CREATE TABLE SRD_PRODUCT_VERSIONS(product CHAR(50), version CHAR(50));
CREATE TABLE SYS_SEQUENCE (SEQUENCE_NAME VARCHAR2(50) NOT NULL, NEXT_SEQUENCE NUMBER NOT NULL, CACHE_SIZE NUMBER NOT NULL, SCATTER CHAR(1) NOT NULL) ;
ALTER TABLE SYS_SEQUENCE ADD CONSTRAINT SYS_SEQUENCE_PK PRIMARY KEY(SEQUENCE_NAME)  USING INDEX;
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('ER_ID',1,100000,'N');
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('LIB_FEAT_ID',1,100000,'N');
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('OBS_ENT_ID',1,100000,'N');
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('OBS_ID',1,100000,'N');
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE,SCATTER) VALUES ('RES_REL_ID',1,100000,'N');
CREATE TABLE SYS_CFG (CONFIG_DATA_ID NUMBER NOT NULL, CONFIG_DATA CLOB NOT NULL, CONFIG_COMMENTS VARCHAR2(200) NOT NULL, SYS_CREATE_DT DATE NOT NULL) ;
ALTER TABLE SYS_CFG ADD CONSTRAINT SYS_CFG_PK PRIMARY KEY(CONFIG_DATA_ID)  USING INDEX;
CREATE TABLE SYS_CODES_USED (CODE_TYPE VARCHAR2(25) NOT NULL, CODE VARCHAR2(25) NOT NULL, CODE_ID NUMBER(5) NOT NULL) ;
ALTER TABLE SYS_CODES_USED ADD CONSTRAINT SYS_CODES_USED_PK PRIMARY KEY(CODE_TYPE, CODE)  USING INDEX;
CREATE UNIQUE INDEX SYS_CODES_USED_SK ON SYS_CODES_USED(CODE_TYPE, CODE_ID) ;
CREATE TABLE SYS_VARS (VAR_GROUP VARCHAR2(25) NOT NULL, VAR_CODE VARCHAR2(25) NOT NULL, VAR_VALUE VARCHAR2(25) NOT NULL, SYS_LSTUPD_DT DATE) ;
ALTER TABLE SYS_VARS ADD CONSTRAINT SYS_VARS_PK PRIMARY KEY(VAR_GROUP, VAR_CODE)  USING INDEX;
INSERT INTO SYS_VARS (VAR_GROUP,VAR_CODE,VAR_VALUE) VALUES ('VERSION','SCHEMA','3.0');
CREATE TABLE SYS_STATUS (SYSTEM_CODE VARCHAR2(50) NOT NULL, LAST_TOUCH_DT DATE) ;
ALTER TABLE SYS_STATUS ADD CONSTRAINT SYS_STATUS_PK PRIMARY KEY(SYSTEM_CODE)  USING INDEX;
CREATE TABLE SYS_EVAL_QUEUE (MSG_ID NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 CACHE 100 NOT NULL, LENS_CODE VARCHAR2(25) NOT NULL, ETYPE_CODE VARCHAR2(25) NOT NULL, DSRC_CODE VARCHAR2(25) NOT NULL, ENT_SRC_KEY VARCHAR2(200) NOT NULL, MSG CLOB) ;
ALTER TABLE SYS_EVAL_QUEUE ADD CONSTRAINT SYS_EVAL_QUEUE_PK PRIMARY KEY(MSG_ID)  USING INDEX;
CREATE UNIQUE INDEX IX_EVAL_QUEUE ON SYS_EVAL_QUEUE(ENT_SRC_KEY, DSRC_CODE, ETYPE_CODE, LENS_CODE) ;
CREATE TABLE LIB_FEAT (LIB_FEAT_ID NUMBER NOT NULL, FTYPE_ID NUMBER(5) NOT NULL, FEAT_HASH CHAR(40) NOT NULL, FEAT_DESC VARCHAR2(150), FELEM_VALUES CLOB NOT NULL, ANONYMIZED VARCHAR2(5) NOT NULL, VERSION NUMBER(5) NOT NULL) ;
ALTER TABLE LIB_FEAT ADD CONSTRAINT LIB_FEAT_PK PRIMARY KEY(LIB_FEAT_ID)  USING INDEX;
CREATE UNIQUE INDEX LIB_FEAT_SK ON LIB_FEAT(FEAT_HASH, FTYPE_ID, ANONYMIZED) ;
CREATE TABLE LIB_FEAT_HKEY (FEAT_HASH CHAR(40) NOT NULL, FTYPE_ID NUMBER(5) NOT NULL, ANONYMIZED VARCHAR2(5) NOT NULL, LIB_FEAT_ID NUMBER NOT NULL) ;
ALTER TABLE LIB_FEAT_HKEY ADD CONSTRAINT LIB_FEAT_HKEY_PK PRIMARY KEY(FEAT_HASH, FTYPE_ID, ANONYMIZED)  USING INDEX;
CREATE TABLE SYS_HW_CHECK (LIB_FEAT_ID NUMBER NOT NULL, FTYPE_ID NUMBER(5) NOT NULL, FEAT_HASH CHAR(40) NOT NULL, FEAT_DESC VARCHAR2(150), FELEM_VALUES CLOB NOT NULL, ANONYMIZED VARCHAR2(5) NOT NULL, VERSION NUMBER(5) NOT NULL) ;
ALTER TABLE SYS_HW_CHECK ADD CONSTRAINT SYS_HW_CHECK_PK PRIMARY KEY(LIB_FEAT_ID)  USING INDEX;
CREATE UNIQUE INDEX SYS_HW_CHECK_SK ON SYS_HW_CHECK(FEAT_HASH, FTYPE_ID, ANONYMIZED) ;
CREATE TABLE LIB_UTYPE (UTYPE_CODE VARCHAR2(50) NOT NULL, UTYPE_DESC VARCHAR2(50)) ;
ALTER TABLE LIB_UTYPE ADD CONSTRAINT LIB_UTYPE_PK PRIMARY KEY(UTYPE_CODE)  USING INDEX;
CREATE TABLE OBS_ENT (OBS_ENT_ID NUMBER NOT NULL, ETYPE_ID NUMBER(5) NOT NULL, DSRC_ID NUMBER(5) NOT NULL, ENT_SRC_KEY VARCHAR2(250) NOT NULL, ENT_SRC_DESC VARCHAR2(250), FROM_LENS_ID NUMBER(5), FROM_RES_ENT_ID NUMBER, FIRST_SEEN_DT DATE, LAST_SEEN_DT DATE, LAST_TOUCH_DT NUMBER, LOCKING_ID NUMBER NOT NULL, NODE_NAME VARCHAR2(50) NOT NULL, LOCK_DSRC_ACTION CHAR(1), FEATURES CLOB) ;
ALTER TABLE OBS_ENT ADD CONSTRAINT OBS_ENT_PK PRIMARY KEY(OBS_ENT_ID)  USING INDEX;
CREATE UNIQUE INDEX OBS_ENT_SK ON OBS_ENT(ENT_SRC_KEY, DSRC_ID) ;
CREATE TABLE OBS_ENT_SKEY (ENT_SRC_KEY VARCHAR2(250) NOT NULL, ETYPE_ID NUMBER(5) NOT NULL, DSRC_ID NUMBER(5) NOT NULL, OBS_ENT_ID NUMBER NOT NULL) ;
ALTER TABLE OBS_ENT_SKEY ADD CONSTRAINT OBS_ENT_SKEY_PK PRIMARY KEY(ENT_SRC_KEY, DSRC_ID)  USING INDEX;
CREATE TABLE OBS_FEAT_EKEY (OBS_ENT_ID NUMBER NOT NULL, LIB_FEAT_ID NUMBER NOT NULL, FTYPE_ID NUMBER(5) NOT NULL, UTYPE_CODE VARCHAR2(50), USED_FROM_DT DATE, USED_THRU_DT DATE, SYS_LSTUPD_DT DATE) ;
CREATE UNIQUE INDEX OBS_FEAT_EKEY_PK ON OBS_FEAT_EKEY(OBS_ENT_ID, LIB_FEAT_ID, UTYPE_CODE) ;
CREATE TABLE DSRC_RECORD (DSRC_ID NUMBER(5) NOT NULL, RECORD_ID VARCHAR2(250) NOT NULL, ETYPE_ID NUMBER(5) NOT NULL, ENT_SRC_KEY VARCHAR2(250) NOT NULL, OBS_ENT_HASH CHAR(40) NOT NULL, JSON_DATA CLOB, CONFIG_ID NUMBER, FIRST_SEEN_DT DATE, LAST_SEEN_DT DATE) ;
ALTER TABLE DSRC_RECORD ADD CONSTRAINT DSRC_RECORD_PK PRIMARY KEY(RECORD_ID, DSRC_ID)  USING INDEX;
CREATE INDEX DSRC_RECORD_SK ON DSRC_RECORD(ENT_SRC_KEY, DSRC_ID) ;
CREATE INDEX DSRC_RECORD_HK ON DSRC_RECORD(OBS_ENT_HASH, DSRC_ID, ETYPE_ID) ;
CREATE TABLE DSRC_RECORD_HKEY (OBS_ENT_HASH CHAR(40) NOT NULL, DSRC_ID NUMBER(5) NOT NULL, RECORD_ID VARCHAR2(250) NOT NULL) ;
ALTER TABLE DSRC_RECORD_HKEY ADD CONSTRAINT DSRC_RECORD_HKEY_PK PRIMARY KEY(OBS_ENT_HASH, DSRC_ID, RECORD_ID)  USING INDEX;
CREATE TABLE RES_FEAT_STAT (LENS_ID NUMBER(5) NOT NULL, LIB_FEAT_ID NUMBER NOT NULL, ECLASS_ID NUMBER(5) NOT NULL, NUM_RES_ENT NUMBER(7) NOT NULL, NUM_RES_ENT_OOM NUMBER(7) NOT NULL, CANDIDATE_CAP_REACHED CHAR(1) DEFAULT 'N' NOT NULL, SCORING_CAP_REACHED CHAR(1) DEFAULT 'N' NOT NULL) ;
ALTER TABLE RES_FEAT_STAT ADD CONSTRAINT RES_FEAT_STAT_PK PRIMARY KEY(LIB_FEAT_ID, LENS_ID, ECLASS_ID)  USING INDEX;
CREATE TABLE RES_ENT (RES_ENT_ID NUMBER NOT NULL, LENS_ID NUMBER(5) NOT NULL, ECLASS_ID NUMBER(5) NOT NULL, INTEREST_LEVEL NUMBER(5), CONFUSION_LEVEL NUMBER(5), NUM_OBS_ENT NUMBER(7), FIRST_SEEN_DT DATE, LAST_SEEN_DT DATE, LAST_TOUCH_DT NUMBER, LOCKING_ID NUMBER NOT NULL, NODE_NAME VARCHAR2(50) NOT NULL, LOCK_DSRC_ACTION CHAR(1)) ;
ALTER TABLE RES_ENT ADD CONSTRAINT RES_ENT_PK PRIMARY KEY(RES_ENT_ID, LENS_ID)  USING INDEX;
CREATE TABLE RES_ENT_OKEY (OBS_ENT_ID NUMBER NOT NULL, LENS_ID NUMBER(5) NOT NULL, RES_ENT_ID NUMBER NOT NULL, ER_ID NUMBER NOT NULL, ERRULE_ID NUMBER(5) NOT NULL, MATCH_KEY CLOB) ;
ALTER TABLE RES_ENT_OKEY ADD CONSTRAINT RES_ENT_OKEY_PK PRIMARY KEY(OBS_ENT_ID, LENS_ID)  USING INDEX;
CREATE UNIQUE INDEX RES_ENT_OKEY_SK ON RES_ENT_OKEY(RES_ENT_ID, LENS_ID, OBS_ENT_ID) ;
CREATE TABLE RES_ENT_RKEY (RES_ENT_ID NUMBER NOT NULL, LENS_ID NUMBER(5) NOT NULL, OBS_ENT_ID NUMBER NOT NULL) ;
ALTER TABLE RES_ENT_RKEY ADD CONSTRAINT RES_ENT_RKEY_PK PRIMARY KEY(RES_ENT_ID, LENS_ID, OBS_ENT_ID)  USING INDEX;
CREATE TABLE RES_FEAT_EKEY (RES_ENT_ID NUMBER NOT NULL, ECLASS_ID NUMBER(5) NOT NULL, LENS_ID NUMBER(5) NOT NULL, LIB_FEAT_ID NUMBER NOT NULL, FTYPE_ID NUMBER(5) NOT NULL, UTYPE_CODE VARCHAR2(50), SUPPRESSED CHAR(1), USED_FROM_DT DATE, USED_THRU_DT DATE, FIRST_SEEN_DT DATE, LAST_SEEN_DT DATE) ;
CREATE UNIQUE INDEX RES_FEAT_EKEY_PK ON RES_FEAT_EKEY(RES_ENT_ID, LENS_ID, LIB_FEAT_ID, UTYPE_CODE) ;
CREATE UNIQUE INDEX RES_FEAT_EKEY_SK ON RES_FEAT_EKEY(LIB_FEAT_ID, LENS_ID, RES_ENT_ID, UTYPE_CODE) ;
CREATE TABLE RES_FEAT_LKEY (LIB_FEAT_ID NUMBER NOT NULL, LENS_ID NUMBER(5) NOT NULL, ECLASS_ID NUMBER(5) NOT NULL, RES_ENT_ID NUMBER NOT NULL, UTYPE_CODE VARCHAR2(50)) ;
CREATE UNIQUE INDEX RES_FEAT_LKEY_PK ON RES_FEAT_LKEY(LIB_FEAT_ID, LENS_ID, RES_ENT_ID, UTYPE_CODE) ;
CREATE TABLE RES_RELATE (RES_REL_ID NUMBER NOT NULL, LENS_ID NUMBER(5) NOT NULL, MIN_RES_ENT_ID NUMBER NOT NULL, MAX_RES_ENT_ID NUMBER NOT NULL, REL_STRENGTH NUMBER(5), REL_STATUS NUMBER(5), IS_DISCLOSED NUMBER(5), IS_AMBIGUOUS NUMBER(5), INTEREST_LEVEL NUMBER(5), CONFUSION_LEVEL NUMBER(5), LAST_ER_ID NUMBER, LAST_REF_SCORE NUMBER(5), LAST_ERRULE_ID NUMBER(5), MATCH_KEY CLOB, MATCH_LEVELS VARCHAR2(50), FIRST_SEEN_DT DATE, LAST_SEEN_DT DATE) ;
ALTER TABLE RES_RELATE ADD CONSTRAINT RES_RELATE_PK PRIMARY KEY(RES_REL_ID)  USING INDEX;
CREATE TABLE RES_REL_EKEY (RES_ENT_ID NUMBER NOT NULL, LENS_ID NUMBER(5) NOT NULL, REL_ENT_ID NUMBER NOT NULL, RES_REL_ID NUMBER NOT NULL) ;
ALTER TABLE RES_REL_EKEY ADD CONSTRAINT RES_REL_EKEY_PK PRIMARY KEY(RES_ENT_ID, LENS_ID, REL_ENT_ID)  USING INDEX;
DELETE FROM SRD_PRODUCT_VERSIONS WHERE PRODUCT='PIPELINE';
INSERT INTO SRD_PRODUCT_VERSIONS VALUES('PIPELINE','4.3.0.8');
COMMIT;
